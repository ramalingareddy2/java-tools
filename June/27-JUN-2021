How do you fix a bug?
#1 go through the bug reported and verify whether it is a bug or not?
#2 reproduce the bug in the development environment following the steps to reproduce
  principle: if we cannot reproduct a bug, it can never be fixed (slogan)
#3 by reproducting the bug developer has to identify the root cause of the problem
#4 analyze root cause identify the changes required for fixing the bug
#5 prepare test plan 
#6 fix the bug by modifying code changes 
#7 re-execute the unit testcases including the new prepared
#8 certify the changes are working properly and move the bug to fixed status



How does the/who will move code will be moved to the qa environment?
In general the qa by themselve are responsible for moving the code from scm repositories into the qa environment. if it is an enterprise organization then there will a separate team working on build and deployment management of an application (release engineers / ops engineers)
  
short:-
either qa or release engineers will take care of moving the code from scm (repo) -> qa environment for facilitating the testing process
  
In order to help the qa team in understanding and perform build and deployment of the application the development team has to provide handoff guide / setup guide to the qa team.
  For eg an handoff guide or a setup guide would describe the below
  1. which softwares / versions are required to be installed on the environment (procedure of installation)
  2. how to setup the database schema and test data to run the application
  3. what dependencies are required for building the application
  4. instructions on setting up the build path and compiling the project
  5. package the application
  6. setup up the application server, configuring the application server to make it ready for deployment
  7. copy the application war file onto the application server
  8. start the application server
  9. validate deployment (to verify it is ready to access)
    
In the above few are one-time activities and few has to be carried each time while deploying the code.   
The developer delivers the handoff guide to qa/release engineers, where those people has to throughly go through the documentation has to understand each of these steps in building and deploying the code to begin testing. 
Performing these steps manually by going through the handoff document has quite a number of challenges / difficulties:-
  1. Most of the activities that are described as part of the handoff guide / setup guide are seems to quite relatable to development rather than qa/release engineers. how on earth a person who can carry these things becomes qa/release engineer? look like it quite tedious job for qa/release engineer in understanding these activities in building and deploying the application
  2. there are quite a number of activities that has to be conducted by qa/release engineers in building and deployment of the application, which is going to eaten up lot of time in release the project
  3. if something goes wrong while performing the above activities, since the qa/release engineers has zero knowledge about these, they always restarts the whole efforts from scratch which is going to further kill the time of deployment and delivery
  4. As all of these activities has to be conducted in a sequence order, any distraction in carrying out these activities will result in failure of build/deployment and again it has to be done from scratch
  5. over the time the activities we have to conduct for building/deploying the code might change, but accomodating such changes are seems to toughest job, since people are involed and should educated well.

The build/deployment activites are seems to be performed repeatitively during the time of qa cycle, qa regression, uat cycle, uat regression and even during production deployment, since it is a repeative job that has to be conducted multiple times across different stages, can we expected atmost perfection in carrying these job by these people?
No, because humans are prone to perform mistakes, which leads to failure.
    
How to solve the above problems?
Since all the activities has to be perform repeatitive over the period of time across different environments, looks like everytime we need to perform same activities instead of we manually performing these operations one by one, we can automate the whole process by writing program.
    
If we can express the above job of performing the activities within a program, everytime when we want to perform the above activities, just run the program which will do a flawless job.
  
What is ANT?
Ant stands for Another Neat Tool, prior to the ant there used to be make build tool for building an application.
The make tool uses operating system routines for carrying the build activities so that the build works only on that platform it has been written for and will not work across the platforms, which is a big dis-advantage.

So, replacing make, ant build tool has been introduced by apache. Ant is purely written in java language thus making it platform portable, which indicates the build activities are not being performed using operating system routines rather the ant has written java language instruction code to perform every operation.
Ant is used for building java applications 


What ANT has provided?
1. ANT has provided an language for defining build instructions which has to be written in XML format.
2. Provided bunch of libraries which contains code for reading and executing the tasks/activities defined within the XML.
3. Utilities to launch the program


How to write ant instruction file for building an application?
ANT build instruction file has to be written in XML language document. For each build activity we want to perform ANT has provided a pre-defined tag (task tag), we need to write task declaration in building instruction file. So that ant reads the XML task tags and executes the relevant Task programs of the ANT.
  
These tasks may have dependency on each other, for eg if a task has executed successfully then execute the other task. How to express dependencies between the tasks.
That is where combile all the tasks to be executed together to accomplish a work and define dependency between them by wrapping into a <target>

Target = is a piece of work we want to accomplish for which we might have to execute multiple tasks. As a piece of work is indicated by a target we can express dependencies between the targets.
  
So we need to write all the targets in a root element called <project> indicating execute all the targets to perform the build of a project

build.xml 
<?xml version="1.0" encoding="utf-8"?>
<project name="firstant">
  <target name="print">
    <echo>Ant program</echo>
  </target>  
</project>
in ant we need to save the build instruction file with default name as "build.xml".
  
How to execute the build file?
Lets install ant to run the build file. we require jdk 1.8 minimum for ant version  apache-ant-1.10.10-bin.zip .
  
1. download the ant zip file using this link https://mirrors.estointernet.in/apache//ant/binaries/apache-ant-1.10.10-bin.zip
2. extract the zip file which will creates apache-ant-1.10.10 directory
3. copy into c:\ drive
4. Goto environment variables create a new variable called ANT_HOME=c:\apache-ant-1.10.10
5. Add ANT_HOME\bin to system path as %ANT_HOME%\bin directory so that we can run ant utility anywhere.

Where do we need to place our build instruction file?
Always keep your build instruction file under the root directory of your java project since you are writing build instructions for executing your project.
  
JavaProgram (java project)
|-src
 |-*.java
 |-config.xml
|-bin
 |-*.class
|-build.xml
so that within build.xml we can refer all the files of our project easily using relative path
  





















  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  






  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

    


















  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  